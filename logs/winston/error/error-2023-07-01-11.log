{
  errors: {
    academicSemester: ValidatorError: Path `academicSemester` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at ObjectId.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `academicSemester` is required.',
        type: 'required',
        path: 'academicSemester',
        value: undefined
      },
      kind: 'required',
      path: 'academicSemester',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    academicDepartment: ValidatorError: Path `academicDepartment` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at ObjectId.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `academicDepartment` is required.',
        type: 'required',
        path: 'academicDepartment',
        value: undefined
      },
      kind: 'required',
      path: 'academicDepartment',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    academicFaculty: ValidatorError: Path `academicFaculty` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at ObjectId.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `academicFaculty` is required.',
        type: 'required',
        path: 'academicFaculty',
        value: undefined
      },
      kind: 'required',
      path: 'academicFaculty',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    localGuardian: ValidatorError: Path `localGuardian` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at SubdocumentPath.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at SubdocumentPath.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schema\SubdocumentPath.js:256:35)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `localGuardian` is required.',
        type: 'required',
        path: 'localGuardian',
        value: undefined
      },
      kind: 'required',
      path: 'localGuardian',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    guardian: ValidatorError: Path `guardian` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at SubdocumentPath.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at SubdocumentPath.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schema\SubdocumentPath.js:256:35)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `guardian` is required.',
        type: 'required',
        path: 'guardian',
        value: undefined
      },
      kind: 'required',
      path: 'guardian',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    permanentAddress: ValidatorError: Path `permanentAddress` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at SchemaString.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `permanentAddress` is required.',
        type: 'required',
        path: 'permanentAddress',
        value: undefined
      },
      kind: 'required',
      path: 'permanentAddress',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    presentAddress: ValidatorError: Path `presentAddress` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at SchemaString.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `presentAddress` is required.',
        type: 'required',
        path: 'presentAddress',
        value: undefined
      },
      kind: 'required',
      path: 'presentAddress',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    emergencyContactNo: ValidatorError: Path `emergencyContactNo` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at SchemaString.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `emergencyContactNo` is required.',
        type: 'required',
        path: 'emergencyContactNo',
        value: undefined
      },
      kind: 'required',
      path: 'emergencyContactNo',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    contactNo: ValidatorError: Path `contactNo` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at SchemaString.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `contactNo` is required.',
        type: 'required',
        path: 'contactNo',
        value: undefined
      },
      kind: 'required',
      path: 'contactNo',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    email: ValidatorError: Path `email` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at SchemaString.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `email` is required.',
        type: 'required',
        path: 'email',
        value: undefined
      },
      kind: 'required',
      path: 'email',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    },
    name: ValidatorError: Path `name` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at SubdocumentPath.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at SubdocumentPath.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schema\SubdocumentPath.js:256:35)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `name` is required.',
        type: 'required',
        path: 'name',
        value: undefined
      },
      kind: 'required',
      path: 'name',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'Student validation failed',
  level: 'error',
  message: 'globalErrorHandler Student validation failed: academicSemester: Path `academicSemester` is required., academicDepartment: Path `academicDepartment` is required., academicFaculty: Path `academicFaculty` is required., localGuardian: Path `localGuardian` is required., guardian: Path `guardian` is required., permanentAddress: Path `permanentAddress` is required., presentAddress: Path `presentAddress` is required., emergencyContactNo: Path `emergencyContactNo` is required., contactNo: Path `contactNo` is required., email: Path `email` is required., name: Path `name` is required.',
  stack: 'ValidationError: Student validation failed: academicSemester: Path `academicSemester` is required., academicDepartment: Path `academicDepartment` is required., academicFaculty: Path `academicFaculty` is required., localGuardian: Path `localGuardian` is required., guardian: Path `guardian` is required., permanentAddress: Path `permanentAddress` is required., presentAddress: Path `presentAddress` is required., emergencyContactNo: Path `emergencyContactNo` is required., contactNo: Path `contactNo` is required., email: Path `email` is required., name: Path `name` is required.\n' +
    '    at model.Document.invalidate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\document.js:3147:32)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\document.js:2940:17\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\schematype.js:1352:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  label: 'right error',
  timestamp: '2023-07-01T05:04:42.897Z'
}
{
  level: 'error',
  message: "globalErrorHandler Cannot read properties of undefined (reading 'password')",
  stack: "TypeError: Cannot read properties of undefined (reading 'password')\n" +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\src\\app\\module\\User\\user.service.ts:17:14\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\src\\app\\module\\User\\user.service.ts:8:71\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at __awaiter (C:\\allProject\\university management system project\\University-Managment-App\\src\\app\\module\\User\\user.service.ts:4:12)\n' +
    '    at Object.createStudent (C:\\allProject\\university management system project\\University-Managment-App\\src\\app\\module\\User\\user.service.ts:15:59)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\src\\app\\module\\User\\user.controller.ts:8:38\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\src\\app\\module\\User\\user.controller.ts:8:71\n' +
    '    at new Promise (<anonymous>)',
  label: 'right error',
  timestamp: '2023-07-01T05:17:13.391Z'
}
{
  level: 'error',
  message: `globalErrorHandler Schema hasn't been registered for model "AcademicDepartment".\n` +
    'Use mongoose.model(name, schema)',
  stack: `MissingSchemaError: Schema hasn't been registered for model "AcademicDepartment".\n` +
    'Use mongoose.model(name, schema)\n' +
    '    at NativeConnection.Connection.model (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\connection.js:1288:13)\n' +
    '    at _getModelFromConn (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:580:15)\n' +
    '    at addModelNamesToMap (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:508:17)\n' +
    '    at getModelsMapForPopulate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:199:7)\n' +
    '    at populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4245:21)\n' +
    '    at _populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4205:5)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4177:5\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at Function.populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4176:10)\n' +
    '    at model.Query._find (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\query.js:2294:20)',
  label: 'right error',
  timestamp: '2023-07-01T05:25:47.866Z'
}
{
  index: 0,
  code: 11000,
  keyPattern: { email: 1 },
  keyValue: { email: 'user@gmail.com' },
  level: 'error',
  message: 'globalErrorHandler E11000 duplicate key error collection: University-Managemetn.students index: email_1 dup key: { email: "user@gmail.com" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: University-Managemetn.students index: email_1 dup key: { email: "user@gmail.com" }\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:368:13\n' +
    '    at handleOperationResult (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:502:14)\n' +
    '    at Connection.onMessage (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:513:28)\n' +
    '    at processIncomingData (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:392:12)',
  label: 'right error',
  timestamp: '2023-07-01T05:27:39.018Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  index: 0,
  code: 11000,
  keyPattern: { email: 1 },
  keyValue: { email: 'user@gmail.com' },
  level: 'error',
  message: 'globalErrorHandler E11000 duplicate key error collection: University-Managemetn.students index: email_1 dup key: { email: "user@gmail.com" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: University-Managemetn.students index: email_1 dup key: { email: "user@gmail.com" }\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:368:13\n' +
    '    at handleOperationResult (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:502:14)\n' +
    '    at Connection.onMessage (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:513:28)\n' +
    '    at processIncomingData (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:392:12)',
  label: 'right error',
  timestamp: '2023-07-01T05:28:15.861Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  level: 'error',
  message: `globalErrorHandler Schema hasn't been registered for model "AcademicDepartment".\n` +
    'Use mongoose.model(name, schema)',
  stack: `MissingSchemaError: Schema hasn't been registered for model "AcademicDepartment".\n` +
    'Use mongoose.model(name, schema)\n' +
    '    at NativeConnection.Connection.model (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\connection.js:1288:13)\n' +
    '    at _getModelFromConn (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:580:15)\n' +
    '    at addModelNamesToMap (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:508:17)\n' +
    '    at getModelsMapForPopulate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:199:7)\n' +
    '    at populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4245:21)\n' +
    '    at _populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4205:5)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4177:5\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at Function.populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4176:10)\n' +
    '    at model.Query._find (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\query.js:2294:20)',
  label: 'right error',
  timestamp: '2023-07-01T05:29:23.094Z'
}
{
  index: 0,
  code: 11000,
  keyPattern: { email: 1 },
  keyValue: { email: 'user@gmail.com' },
  level: 'error',
  message: 'globalErrorHandler E11000 duplicate key error collection: University-Managemetn.students index: email_1 dup key: { email: "user@gmail.com" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: University-Managemetn.students index: email_1 dup key: { email: "user@gmail.com" }\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:368:13\n' +
    '    at handleOperationResult (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:502:14)\n' +
    '    at Connection.onMessage (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:513:28)\n' +
    '    at processIncomingData (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:392:12)',
  label: 'right error',
  timestamp: '2023-07-01T05:37:06.391Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  index: 0,
  code: 11000,
  keyPattern: { contactNo: 1 },
  keyValue: { contactNo: 'user_4' },
  level: 'error',
  message: 'globalErrorHandler E11000 duplicate key error collection: University-Managemetn.students index: contactNo_1 dup key: { contactNo: "user_4" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: University-Managemetn.students index: contactNo_1 dup key: { contactNo: "user_4" }\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:368:13\n' +
    '    at handleOperationResult (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:502:14)\n' +
    '    at Connection.onMessage (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:513:28)\n' +
    '    at processIncomingData (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:392:12)',
  label: 'right error',
  timestamp: '2023-07-01T05:38:15.019Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  index: 0,
  code: 11000,
  keyPattern: { contactNo: 1 },
  keyValue: { contactNo: 'user_4' },
  level: 'error',
  message: 'globalErrorHandler E11000 duplicate key error collection: University-Managemetn.students index: contactNo_1 dup key: { contactNo: "user_4" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: University-Managemetn.students index: contactNo_1 dup key: { contactNo: "user_4" }\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:368:13\n' +
    '    at handleOperationResult (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:502:14)\n' +
    '    at Connection.onMessage (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:513:28)\n' +
    '    at processIncomingData (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:392:12)',
  label: 'right error',
  timestamp: '2023-07-01T05:38:33.147Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  level: 'error',
  message: `globalErrorHandler Schema hasn't been registered for model "AcademicDepartment".\n` +
    'Use mongoose.model(name, schema)',
  stack: `MissingSchemaError: Schema hasn't been registered for model "AcademicDepartment".\n` +
    'Use mongoose.model(name, schema)\n' +
    '    at NativeConnection.Connection.model (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\connection.js:1288:13)\n' +
    '    at _getModelFromConn (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:580:15)\n' +
    '    at addModelNamesToMap (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:508:17)\n' +
    '    at getModelsMapForPopulate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:199:7)\n' +
    '    at populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4245:21)\n' +
    '    at _populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4205:5)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4177:5\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at Function.populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4176:10)\n' +
    '    at model.Query._find (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\query.js:2294:20)',
  label: 'right error',
  timestamp: '2023-07-01T05:39:02.781Z'
}
{
  statusCode: 409,
  level: 'error',
  message: 'globalErrorHandler Academic Semester already exists ',
  stack: 'Error: Academic Semester already exists \n' +
    '    at model.<anonymous> (C:\\allProject\\university management system project\\University-Managment-App\\src\\app\\module\\academicSemester\\academicSemester.Model.ts:62:11)\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at fulfilled (C:\\allProject\\university management system project\\University-Managment-App\\src\\app\\module\\academicSemester\\academicSemester.Model.ts:5:58)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'right error',
  timestamp: '2023-07-01T05:41:19.001Z'
}
{
  errors: {
    academicFaculty: ValidatorError: Path `academicFaculty` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at ObjectId.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `academicFaculty` is required.',
        type: 'required',
        path: 'academicFaculty',
        value: undefined
      },
      kind: 'required',
      path: 'academicFaculty',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'department validation failed',
  level: 'error',
  message: 'globalErrorHandler department validation failed: academicFaculty: Path `academicFaculty` is required.',
  stack: 'ValidationError: department validation failed: academicFaculty: Path `academicFaculty` is required.\n' +
    '    at model.Document.invalidate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\document.js:3147:32)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\document.js:2940:17\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\schematype.js:1352:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  label: 'right error',
  timestamp: '2023-07-01T05:42:52.803Z'
}
{
  errors: {
    academicFaculty: ValidatorError: Path `academicFaculty` is required.
        at validate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1349:13)
        at ObjectId.SchemaType.doValidate (C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\schematype.js:1333:7)
        at C:\allProject\university management system project\University-Managment-App\node_modules\mongoose\lib\document.js:2932:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Path `academicFaculty` is required.',
        type: 'required',
        path: 'academicFaculty',
        value: undefined
      },
      kind: 'required',
      path: 'academicFaculty',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose:validatorError)]: true
    }
  },
  _message: 'department validation failed',
  level: 'error',
  message: 'globalErrorHandler department validation failed: academicFaculty: Path `academicFaculty` is required.',
  stack: 'ValidationError: department validation failed: academicFaculty: Path `academicFaculty` is required.\n' +
    '    at model.Document.invalidate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\document.js:3147:32)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\document.js:2940:17\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\schematype.js:1352:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  label: 'right error',
  timestamp: '2023-07-01T05:44:03.888Z'
}
{
  level: 'error',
  message: `globalErrorHandler Schema hasn't been registered for model "AcademicDepartment".\n` +
    'Use mongoose.model(name, schema)',
  stack: `MissingSchemaError: Schema hasn't been registered for model "AcademicDepartment".\n` +
    'Use mongoose.model(name, schema)\n' +
    '    at NativeConnection.Connection.model (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\connection.js:1288:13)\n' +
    '    at _getModelFromConn (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:580:15)\n' +
    '    at addModelNamesToMap (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:508:17)\n' +
    '    at getModelsMapForPopulate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:199:7)\n' +
    '    at populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4245:21)\n' +
    '    at _populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4205:5)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4177:5\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at Function.populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4176:10)\n' +
    '    at model.Query._find (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\query.js:2294:20)',
  label: 'right error',
  timestamp: '2023-07-01T05:47:25.715Z'
}
{
  level: 'error',
  message: `globalErrorHandler Schema hasn't been registered for model "department".\n` +
    'Use mongoose.model(name, schema)',
  stack: `MissingSchemaError: Schema hasn't been registered for model "department".\n` +
    'Use mongoose.model(name, schema)\n' +
    '    at NativeConnection.Connection.model (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\connection.js:1288:13)\n' +
    '    at _getModelFromConn (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:580:15)\n' +
    '    at addModelNamesToMap (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:508:17)\n' +
    '    at getModelsMapForPopulate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\helpers\\populate\\getModelsMapForPopulate.js:199:7)\n' +
    '    at populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4245:21)\n' +
    '    at _populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4205:5)\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4177:5\n' +
    '    at new Promise (<anonymous>)\n' +
    '    at Function.populate (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\model.js:4176:10)\n' +
    '    at model.Query._find (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongoose\\lib\\query.js:2294:20)',
  label: 'right error',
  timestamp: '2023-07-01T05:54:25.335Z'
}
{
  index: 0,
  code: 11000,
  keyPattern: { email: 1 },
  keyValue: { email: 'user5@gmail.com' },
  level: 'error',
  message: 'globalErrorHandler E11000 duplicate key error collection: University-Managemetn.students index: email_1 dup key: { email: "user5@gmail.com" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: University-Managemetn.students index: email_1 dup key: { email: "user5@gmail.com" }\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:368:13\n' +
    '    at handleOperationResult (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:502:14)\n' +
    '    at Connection.onMessage (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:513:28)\n' +
    '    at processIncomingData (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:392:12)',
  label: 'right error',
  timestamp: '2023-07-01T05:55:51.990Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  index: 0,
  code: 11000,
  keyPattern: { contactNo: 1 },
  keyValue: { contactNo: 'user_7' },
  level: 'error',
  message: 'globalErrorHandler E11000 duplicate key error collection: University-Managemetn.students index: contactNo_1 dup key: { contactNo: "user_7" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: University-Managemetn.students index: contactNo_1 dup key: { contactNo: "user_7" }\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:368:13\n' +
    '    at handleOperationResult (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\sdam\\server.ts:502:14)\n' +
    '    at Connection.onMessage (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:513:28)\n' +
    '    at processIncomingData (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\allProject\\university management system project\\University-Managment-App\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:392:12)',
  label: 'right error',
  timestamp: '2023-07-01T05:56:06.998Z',
  [Symbol(errorLabels)]: Set(0) {}
}
